{"version":3,"sources":["Nav.js","Cards.js","Sdata.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","href","Cards","props","src","imgsrc","alt","title","sname","link2","link","target","Sdata","Main","map","user","index","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6LAgBeA,G,KAbH,WACV,OACE,yBAAKC,UAAU,OACb,wBAAIA,UAAU,WACb,4BAAI,uBAAGC,KAAK,4BAAR,YACH,4BAAI,uBAAGA,KAAK,yBAAR,UACH,4BAAI,uBAAGA,KAAK,0BAAR,UACH,4BAAI,uBAAGA,KAAK,4BAAR,gBCiBCC,EArBD,SAACC,GACb,OAEE,yBAAKH,UAAU,SACd,yBAAKA,UAAU,QACd,yBAAKI,IAAKD,EAAME,OAAQC,IAAI,SAASN,UAAU,aAC/C,yBAAKA,UAAU,aACd,0BAAMA,UAAU,iBAAiBG,EAAMI,MAAvC,KACA,wBAAIP,UAAU,cAAcG,EAAMK,MAAlC,KACA,uBAAIP,KAAME,EAAMM,OACd,yCAEF,uBAAGR,KAAME,EAAMO,KAAMC,OAAO,UAC1B,0DC6GMC,EAhID,CAGd,CACAP,OAAO,iBACPE,MAAM,WACNC,MAAM,eACNE,KAAK,gDACLD,MAAM,oBAMN,CACEJ,OAAO,oBACPE,MAAM,WACNC,MAAM,cACNE,KAAK,+CACPD,MAAM,0BAIN,CACEJ,OAAO,oBACPE,MAAM,WACNC,MAAM,cACNE,KAAK,+CACLD,MAAM,kBAIR,CACEJ,OAAO,kBACPE,MAAM,WACNC,MAAM,cACNE,KAAK,+CACLD,MAAM,sBAKR,CACEJ,OAAO,mBACPE,MAAM,WACNC,MAAM,cACNE,KAAK,+CACLD,MAAM,wBAKR,CACEJ,OAAO,iBACPE,MAAM,WACNC,MAAM,eACNE,KAAK,uDACLD,MAAM,oBAKR,CACEJ,OAAO,kBACPE,MAAM,WACNC,MAAM,aACNE,KAAK,8CACLD,MAAM,sBAMR,CACEJ,OAAO,mBACPE,MAAM,WACNC,MAAM,gBACNE,KAAK,iDACLD,MAAM,wBAMR,CACEJ,OAAO,iBACPE,MAAM,WACNC,MAAM,YACNE,KAAK,6CACLD,MAAM,oBAKR,CACEJ,OAAO,kBACPE,MAAM,WACNC,MAAM,eACNE,KAAK,gDACLD,MAAM,sBAMR,CACEJ,OAAO,kBACPE,MAAM,WACNC,MAAM,iBACNE,KAAK,kDACLD,MAAM,sBAMR,CACEJ,OAAO,iBACPE,MAAM,WACNC,MAAM,YACNE,KAAK,kDACLD,MAAM,qBCpFOI,EA3BF,WACZ,OAEE,oCACE,kBAAC,EAAD,MACA,yBAAKb,UAAU,OACZ,wBAAIA,UAAU,MAAd,cAEF,0BAAMA,UAAU,QAAO,kDAEzB,yBAAKA,UAAU,aACZY,EAAME,KAAI,SAACC,EAAKC,GACjB,OACA,kBAAC,EAAD,CACAX,OAAQU,EAAKV,OACbE,MAAOQ,EAAKR,MACZC,MAAOO,EAAKP,MACZE,KAAMK,EAAKL,KACXD,MAAOM,EAAKN,cCdHQ,EAVH,WACV,OACG,oCACE,kBAAC,EAAD,QCKaC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAEbC,SAASC,eAAe,SD0HrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6d8ea8c4.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Nav = () => {\n  return(\n    <nav className=\"nav\">\n      <ul className=\"mainnav\">\n       <li><a href=\"https://www.pornhub.org/\">Pornhub</a></li>\n        <li><a href=\"https://www.tube8.es/\">Tube8</a></li>\n         <li><a href=\"https://www.vixen.com/\">Vixen</a></li>\n          <li><a href=\"https://www.xvideos.com/\">XVideos</a></li>\n          </ul>\n         </nav>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {NavLink} from 'react-router-dom';\n\n\n\nconst Cards = (props) => {\n  return(\n\n    <div className=\"Cards\">\n     <div className=\"card\">\n      <img src={props.imgsrc} alt=\"my pic\" className=\"card_img\"/>\n      <div className=\"card_info\">\n       <span className=\"card_category\">{props.title} </span>\n       <h3 className=\"card_title\">{props.sname} </h3>\n       <a  href={props.link2}>\n         <button>Pics</button>\n       </a>\n       <a href={props.link} target=\"_blank\">\n         <button>Profile & videos </button>\n       </a>\n      </div>\n     </div>\n    </div>\n);\n}\n\nexport default Cards;\n","const Sdata = [\n\n//Lana Rhoades\n{\nimgsrc:\"./img/lana.jpg\",\ntitle:\"Pornstar\",\nsname:\"Lana Rhoades\",\nlink:\"https://www.pornhub.org/pornstar/lana-rhoades\",\nlink2:\"./lana/lana.html\"\n\n},\n\n//Mia Malkova\n\n{\n  imgsrc:\"./img/malkova.jpg\",\n  title:\"Pornstar\",\n  sname:\"Mia Malkova\",\n  link:\"https://www.pornhub.org/pornstar/mia-malkova\",\nlink2:\"./malkova/malkova.html\"\n},\n\n//Mia Khalifa\n{\n  imgsrc:\"./img/khalifa.jpg\",\n  title:\"Pornstar\",\n  sname:\"Mia Khalifa\",\n  link:\"https://www.pornhub.org/pornstar/mia-khalifa\",\n  link2:\"./mia/mia.html\"\n},\n\n//Sunny Leone\n{\n  imgsrc:\"./img/sunny.jpg\",\n  title:\"Pornstar\",\n  sname:\"Sunny Leone\",\n  link:\"https://www.pornhub.org/pornstar/sunny-leone\",\n  link2:\"./sunny/sunny.html\"\n\n},\n\n//Johnny Sins\n{\n  imgsrc:\"./img/johnny.jpg\",\n  title:\"Pornstar\",\n  sname:\"Johnny Sins\",\n  link:\"https://www.pornhub.org/pornstar/johnny-sins\",\n  link2:\"./johnny/johnny.html\"\n\n},\n\n//Dani Daniels\n{\n  imgsrc:\"./img/dani.jpg\",\n  title:\"Pornstar\",\n  sname:\"Dani Daniels\",\n  link:\"https://www.pornhub.org/pornstar/dani-daniels/videos\",\n  link2:\"./dani/dani.html\"\n\n},\n\n//Kissa Sins\n{\n  imgsrc:\"./img/kissa.jpg\",\n  title:\"Pornstar\",\n  sname:\"Kissa Sins\",\n  link:\"https://www.pornhub.org/pornstar/kissa-sins\",\n  link2:\"./kissa/kissa.html\"\n\n},\n\n\n//August Taylor\n{\n  imgsrc:\"./img/august.jpg\",\n  title:\"Pornstar\",\n  sname:\"August Taylor\",\n  link:\"https://www.pornhub.org/pornstar/august-taylor\",\n  link2:\"./august/august.html\"\n\n},\n\n//Romi Rain\n\n{\n  imgsrc:\"./img/romi.jpg\",\n  title:\"Pornstar\",\n  sname:\"Romi Rain\",\n  link:\"https://www.pornhub.org/pornstar/romi-rain\",\n  link2:\"./romi/romi.html\"\n\n},\n\n//Jessa Rhodes\n{\n  imgsrc:\"./img/jessa.jpg\",\n  title:\"Pornstar\",\n  sname:\"Jessa Rhodes\",\n  link:\"https://www.pornhub.org/pornstar/jessa-rhodes\",\n  link2:\"./jessa/jessa.html\"\n\n},\n\n\n//Kelly Anderson\n{\n  imgsrc:\"./img/kelly.jpg\",\n  title:\"Pornstar\",\n  sname:\"Kelly Anderson\",\n  link:\"https://www.pornhub.org/pornstar/kelly-anderson\",\n  link2:\"./kelly/kelly.html\"\n\n},\n\n\n//Lela Star\n{\n  imgsrc:\"./img/lela.jpg\",\n  title:\"Pornstar\",\n  sname:\"Lela star\",\n  link:\"https://www.pornhub.org/pornstar/kelly-anderson\",\n  link2:\"./lela/lela.html\"\n\n},\n\n\n\n];\nexport default Sdata;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Nav from './Nav';\nimport Cards from './Cards';\nimport './index.css';\nimport Sdata from './Sdata';\n\n\n\n\nconst Main = () => {\n return(\n\n   <>\n     <Nav/>\n     <div className=\"set\">\n        <h1 className=\"h1\">New Porn </h1>\n      </div>\n      <span className=\"sexy\"><h1>sexiest Porn Ever</h1></span>\n\n    <div className=\"container\">\n      {Sdata.map((user,index)=> {\n      return(\n      <Cards\n      imgsrc={user.imgsrc}\n      title={user.title}\n      sname={user.sname}\n      link={user.link}\n      link2={user.link2}\n      />);}\n    )}\n    </div>\n </>\n  );\n\n};\n\nexport default Main;\n","import React from 'react';\nimport Main from './Main';\n\n\nconst App = () =>{\n  return(\n     <>\n       <Main/>\n\n     </>\n      );\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App/>\n\n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}